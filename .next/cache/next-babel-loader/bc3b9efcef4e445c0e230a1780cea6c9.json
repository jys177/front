{"ast":null,"code":"var _jsxFileName = \"/Users/joyeongsang/workspace/prepare/front/pages/signup.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useCallback } from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport Head from \"next/Head\";\nimport { Form, Input, Checkbox, Button } from \"antd\";\nimport styled from 'styled-components';\nimport useInput from \"../hooks/useInput\"; //next 에서 프론트 서버 런타임시 파일을 추가하면 추가가 잘 될 경우도 있고 잘 안되는 경우도 있으므로 주의한다.\n\nconst ErrorMessage = styled.div`\n    color: red\n`;\n\nconst Signup = () => {\n  // 반복적인 훅이 자주 사용되는 경우 custom hook을 만들어서 사용하면 편리하다.\n  const [id, onChangeId] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  const {\n    0: term,\n    1: setTerm\n  } = useState('');\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n  const onSubmit = useCallback(() => {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log(id, nickname, password);\n  }, [password, passwordCheck, term]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"signup | NodeBird\")), __jsx(Form, {\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nickname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }), __jsx(Input, {\n    name: \"user-nickname\",\n    value: nickname,\n    required: true,\n    onChange: onChangeNickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), __jsx(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), passwordError && __jsx(ErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 39\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"\\uC704 \\uC0AC\\uD56D\\uC744 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(ErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 35\n    }\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport default Signup;","map":{"version":3,"names":["useState","useCallback","AppLayout","Head","Form","Input","Checkbox","Button","styled","useInput","ErrorMessage","div","Signup","id","onChangeId","password","onChangePassword","nickname","onChangeNickname","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onChangePasswordCheck","e","target","value","term","setTerm","termError","setTermError","onChangeTerm","checked","onSubmit","console","log","marginTop"],"sources":["/Users/joyeongsang/workspace/prepare/front/pages/signup.js"],"sourcesContent":["import {useState, useCallback} from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport Head from \"next/Head\";\nimport { Form, Input, Checkbox, Button } from \"antd\";\nimport styled from 'styled-components';\nimport useInput from \"../hooks/useInput\";\n//next 에서 프론트 서버 런타임시 파일을 추가하면 추가가 잘 될 경우도 있고 잘 안되는 경우도 있으므로 주의한다.\n\nconst ErrorMessage = styled.div`\n    color: red\n`;\n\nconst Signup = () =>{\n    // 반복적인 훅이 자주 사용되는 경우 custom hook을 만들어서 사용하면 편리하다.\n    const [id,onChangeId] = useInput('');\n    const [password,onChangePassword] = useInput('');\n    const [nickname,onChangeNickname] = useInput('');\n    const [passwordCheck,setPasswordCheck] = useState('');\n    const [passwordError,setPasswordError] = useState(false);\n    const onChangePasswordCheck = useCallback((e)=>{\n        setPasswordCheck(e.target.value);\n        setPasswordError(e.target.value !== password);\n    },[password]);\n\n    const [term, setTerm] = useState('');\n    const [termError, setTermError] = useState(false);\n    const onChangeTerm = useCallback((e)=>{\n        setTerm(e.target.checked);\n        setTermError(false);\n    },[]);\n\n    const onSubmit = useCallback(()=>{\n        if(password!==passwordCheck){\n            return setPasswordError(true);\n        }\n        if(!term){\n            return setTermError(true);\n        }\n        console.log(id,nickname,password);\n    },[password,passwordCheck,term]);\n\n    return (\n        <AppLayout>\n            <Head>\n                <title>signup | NodeBird</title>\n            </Head>\n            <Form onFinish={onSubmit}>\n                <div>\n                    <label htmlFor=\"user-id\">아이디</label>\n                    <br/>\n                    <Input name=\"user-id\" value={id} required onChange={onChangeId}></Input>\n                </div>\n                <div>\n                    <label htmlFor=\"user-nickname\">닉네임</label>\n                    <br/>\n                    <Input name=\"user-nickname\" value={nickname} required onChange={onChangeNickname}></Input>\n                </div>\n                <div>\n                    <label htmlFor=\"user-password\">비밀번호</label>\n                    <br/>\n                    <Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassword}></Input>\n                </div>\n                <div>\n                    <label htmlFor=\"user-password-check\">비밀번호체크</label>\n                    <br/>\n                    <Input \n                    name=\"user-password-check\" \n                    type=\"password\"\n                    value={passwordCheck} \n                    required \n                    onChange={onChangePasswordCheck}></Input>\n                    {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>}\n                </div>\n                <div>\n                    <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>\n                        위 사항을 동의합니다.\n                    </Checkbox>\n                    {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\n                </div>\n                <div style={{marginTop : 10}}>\n                    <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\n                </div>\n            </Form>\n        </AppLayout>\n    )\n}\nexport default Signup;"],"mappings":"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"},"metadata":{},"sourceType":"module"}